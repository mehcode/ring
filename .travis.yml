language: rust
matrix:
  fast_finish: true
  include:
    - env: TARGET_X=aarch64-unknown-linux-gnu CC_X=aarch64-linux-gnu-gcc CXX_X=aarch64-linux-gnu-g++ MODE_X=DEBUG KCOV=1
      rust: nightly
      sudo: required
      dist: trusty
      before_install:
        - sudo add-apt-repository ppa:pietro-monteiro/qemu-backport -y
        - sudo apt-get update -qq
        - sudo apt-get install binfmt-support gcc-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu libc6-dev-arm64-cross qemu-user-binfmt -y
        - sudo apt-get install libcurl3:arm64 libcurl4-openssl-dev:arm64 libdw-dev:arm64 libelf-dev:arm64 libkrb5-dev:arm64 libssl-dev:arm64 -y

    - env: TARGET_X=arm-unknown-linux-gnueabi CC_X=arm-linux-gnueabi-gcc CXX_X=arm-linux-gnueabi-g++ MODE_X=DEBUG KCOV=1
      rust: nightly
      sudo: required
      dist: trusty
      before_install:
        - sudo add-apt-repository ppa:pietro-monteiro/qemu-backport -y
        - sudo apt-get update -qq
        - sudo apt-get install binfmt-support gcc-arm-linux-gnueabi g++-arm-linux-gnueabi libc6-dev-armel-cross qemu-user-binfmt -y
        - sudo apt-get install libcurl3:armhf libcurl4-openssl-dev:armhf libdw-dev:armhf libelf-dev:armhf libkrb5-dev:armhf libssl-dev:armhf linux-libc-dev:armhf -y

    - env: TARGET_X=i686-unknown-linux-gnu CC_X=gcc-4.6 CXX_X=g++-4.6 MODE_X=DEBUG KCOV=1
      rust: nightly
      os: linux
      addons:
        apt:
          packages:
            - g++-multilib
            - gcc-multilib
            - libc6-dev-i386
            - libcurl3:i386
            - libcurl4-openssl-dev:i386
            - libdw-dev:i386
            - libelf-dev:i386
            - libkrb5-dev:i386
            - libssl-dev:i386
          sources:
            - ubuntu-toolchain-r-test

    - env: TARGET_X=x86_64-unknown-linux-gnu CC_X=gcc-4.6 CXX_X=g++-4.6 MODE_X=DEBUG KCOV=1
      rust: nightly
      os: linux
      addons:
        apt:
          packages:
            - binutils-dev
            - libcurl4-openssl-dev
            - libdw-dev
            - libelf-dev

script: if [[ "$TARGET_X" == "arm-unknown-linux-gnueabi" ]]; then travis_wait 60 mk/travis.sh; else mk/travis.sh; fi
